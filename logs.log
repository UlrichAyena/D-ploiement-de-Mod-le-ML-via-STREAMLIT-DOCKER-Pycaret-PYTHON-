2024-03-29 01:42:02,655:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-29 01:42:02,655:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-29 01:42:02,655:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-29 01:42:02,656:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-29 01:42:05,347:INFO:Initializing load_model()
2024-03-29 01:42:05,347:INFO:load_model(model_name=modele_ulrich_streamlit, platform=None, authentication=None, verbose=True)
2024-03-29 01:42:05,487:WARNING:C:\Users\ayena\anaconda3\envs\my_pycaret\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.3.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.18.1', 'ipywidgets': '7.7.0', 'tqdm': '4.66.2', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.3', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.3', 'imblearn': '0.12.0', 'category_encoders': '2.6.3', 'lightgbm': '4.3.0', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.8', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.9.19', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.0.0', 'pycaret': '3.2.0', 'IPython': '8.15.0', 'ipywidgets': '8.0.4', 'tqdm': '4.65.0', 'numpy': '1.24.3', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.1.1', 'sklearn': '1.2.2', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.57.1', 'requests': '2.31.0', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '2.0.2', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.5', 'machine': 'AMD64'}}
  warnings.warn(

2024-03-29 01:42:05,515:INFO:Initializing predict_model()
2024-03-29 01:42:05,515:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AC4B20A040>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001AC4B40E160>)
2024-03-29 01:42:05,515:INFO:Checking exceptions
2024-03-29 01:42:05,515:INFO:Preloading libraries
2024-03-29 01:42:05,518:INFO:Set up data.
2024-03-29 01:42:05,534:INFO:Set up index.
2024-03-29 01:42:20,969:INFO:Initializing predict_model()
2024-03-29 01:42:20,969:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AC4B2027F0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001AC4B4BC0D0>)
2024-03-29 01:42:20,969:INFO:Checking exceptions
2024-03-29 01:42:20,970:INFO:Preloading libraries
2024-03-29 01:42:20,970:INFO:Set up data.
2024-03-29 01:42:20,979:INFO:Set up index.
2024-03-29 01:42:26,641:INFO:Initializing predict_model()
2024-03-29 01:42:26,641:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AC4B4BB730>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001AC4B4BC4C0>)
2024-03-29 01:42:26,641:INFO:Checking exceptions
2024-03-29 01:42:26,641:INFO:Preloading libraries
2024-03-29 01:42:26,641:INFO:Set up data.
2024-03-29 01:42:26,647:INFO:Set up index.
2024-03-29 01:42:26,838:INFO:Initializing predict_model()
2024-03-29 01:42:26,838:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AC2645CF70>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001AC4B4BC820>)
2024-03-29 01:42:26,838:INFO:Checking exceptions
2024-03-29 01:42:26,839:INFO:Preloading libraries
2024-03-29 01:42:26,839:INFO:Set up data.
2024-03-29 01:42:26,845:INFO:Set up index.
2024-03-29 01:42:29,048:INFO:Initializing predict_model()
2024-03-29 01:42:29,049:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AC4B3FF8E0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001AC4B4BC5E0>)
2024-03-29 01:42:29,049:INFO:Checking exceptions
2024-03-29 01:42:29,049:INFO:Preloading libraries
2024-03-29 01:42:29,049:INFO:Set up data.
2024-03-29 01:42:29,054:INFO:Set up index.
2024-03-29 01:42:29,262:INFO:Initializing predict_model()
2024-03-29 01:42:29,263:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AC265F26D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001AC4B4BC3A0>)
2024-03-29 01:42:29,263:INFO:Checking exceptions
2024-03-29 01:42:29,263:INFO:Preloading libraries
2024-03-29 01:42:29,264:INFO:Set up data.
2024-03-29 01:42:29,268:INFO:Set up index.
2024-03-29 01:42:30,345:INFO:Initializing predict_model()
2024-03-29 01:42:30,345:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AC2661CE80>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001AC4B4BC700>)
2024-03-29 01:42:30,345:INFO:Checking exceptions
2024-03-29 01:42:30,345:INFO:Preloading libraries
2024-03-29 01:42:30,346:INFO:Set up data.
2024-03-29 01:42:30,355:INFO:Set up index.
2024-03-29 01:42:30,578:INFO:Initializing predict_model()
2024-03-29 01:42:30,578:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AC265F26D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001AC4B4BC040>)
2024-03-29 01:42:30,579:INFO:Checking exceptions
2024-03-29 01:42:30,579:INFO:Preloading libraries
2024-03-29 01:42:30,579:INFO:Set up data.
2024-03-29 01:42:30,585:INFO:Set up index.
2024-03-29 01:42:43,025:INFO:Initializing predict_model()
2024-03-29 01:42:43,026:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AC26633040>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001AC4B4BCE50>)
2024-03-29 01:42:43,026:INFO:Checking exceptions
2024-03-29 01:42:43,026:INFO:Preloading libraries
2024-03-29 01:42:43,026:INFO:Set up data.
2024-03-29 01:42:43,034:INFO:Set up index.
2024-03-29 01:42:48,068:INFO:Initializing predict_model()
2024-03-29 01:42:48,068:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AC4B4BB6D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001AC4B4BC940>)
2024-03-29 01:42:48,068:INFO:Checking exceptions
2024-03-29 01:42:48,068:INFO:Preloading libraries
2024-03-29 01:42:48,069:INFO:Set up data.
2024-03-29 01:42:48,074:INFO:Set up index.
2024-03-29 01:42:48,858:INFO:Initializing predict_model()
2024-03-29 01:42:48,858:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AC4B202790>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001AC4B4BC670>)
2024-03-29 01:42:48,858:INFO:Checking exceptions
2024-03-29 01:42:48,858:INFO:Preloading libraries
2024-03-29 01:42:48,859:INFO:Set up data.
2024-03-29 01:42:48,864:INFO:Set up index.
2024-03-29 01:42:49,038:INFO:Initializing predict_model()
2024-03-29 01:42:49,038:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AC26633190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001AC4B4BC1F0>)
2024-03-29 01:42:49,038:INFO:Checking exceptions
2024-03-29 01:42:49,039:INFO:Preloading libraries
2024-03-29 01:42:49,039:INFO:Set up data.
2024-03-29 01:42:49,044:INFO:Set up index.
2024-03-29 01:42:49,241:INFO:Initializing predict_model()
2024-03-29 01:42:49,241:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AC265F2AF0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001AC4B4BCF70>)
2024-03-29 01:42:49,241:INFO:Checking exceptions
2024-03-29 01:42:49,242:INFO:Preloading libraries
2024-03-29 01:42:49,242:INFO:Set up data.
2024-03-29 01:42:49,251:INFO:Set up index.
2024-03-29 01:42:49,489:INFO:Initializing predict_model()
2024-03-29 01:42:49,489:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AC4B4A68E0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001AC4B4BC700>)
2024-03-29 01:42:49,489:INFO:Checking exceptions
2024-03-29 01:42:49,490:INFO:Preloading libraries
2024-03-29 01:42:49,490:INFO:Set up data.
2024-03-29 01:42:49,499:INFO:Set up index.
2024-03-29 01:42:49,751:INFO:Initializing predict_model()
2024-03-29 01:42:49,752:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AC4B2029A0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001AC4B4BCCA0>)
2024-03-29 01:42:49,752:INFO:Checking exceptions
2024-03-29 01:42:49,752:INFO:Preloading libraries
2024-03-29 01:42:49,753:INFO:Set up data.
2024-03-29 01:42:49,759:INFO:Set up index.
2024-03-29 01:42:49,959:INFO:Initializing predict_model()
2024-03-29 01:42:49,959:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AC4B4A6700>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001AC4B4BC4C0>)
2024-03-29 01:42:49,960:INFO:Checking exceptions
2024-03-29 01:42:49,960:INFO:Preloading libraries
2024-03-29 01:42:49,960:INFO:Set up data.
2024-03-29 01:42:49,966:INFO:Set up index.
2024-03-29 01:42:59,793:INFO:Initializing predict_model()
2024-03-29 01:42:59,795:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AC4B482640>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001AC4B4BC820>)
2024-03-29 01:42:59,795:INFO:Checking exceptions
2024-03-29 01:42:59,795:INFO:Preloading libraries
2024-03-29 01:42:59,795:INFO:Set up data.
2024-03-29 01:42:59,803:INFO:Set up index.
2024-03-29 01:43:07,544:INFO:Initializing predict_model()
2024-03-29 01:43:07,546:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AC4B2027C0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001AC4B4BC3A0>)
2024-03-29 01:43:07,546:INFO:Checking exceptions
2024-03-29 01:43:07,546:INFO:Preloading libraries
2024-03-29 01:43:07,548:INFO:Set up data.
2024-03-29 01:43:07,556:INFO:Set up index.
2024-03-29 01:43:08,275:INFO:Initializing predict_model()
2024-03-29 01:43:08,276:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AC4B42A1C0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001AC265E9160>)
2024-03-29 01:43:08,277:INFO:Checking exceptions
2024-03-29 01:43:08,277:INFO:Preloading libraries
2024-03-29 01:43:08,277:INFO:Set up data.
2024-03-29 01:43:08,288:INFO:Set up index.
2024-03-29 01:47:57,257:INFO:Initializing predict_model()
2024-03-29 01:47:57,258:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AC4B49A610>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001AC265E9310>)
2024-03-29 01:47:57,258:INFO:Checking exceptions
2024-03-29 01:47:57,258:INFO:Preloading libraries
2024-03-29 01:47:57,259:INFO:Set up data.
2024-03-29 01:47:57,266:INFO:Set up index.
2024-03-29 01:48:07,277:INFO:Initializing predict_model()
2024-03-29 01:48:07,278:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AC4B4822B0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001AC264670D0>)
2024-03-29 01:48:07,278:INFO:Checking exceptions
2024-03-29 01:48:07,278:INFO:Preloading libraries
2024-03-29 01:48:07,278:INFO:Set up data.
2024-03-29 01:48:07,282:INFO:Set up index.
2024-03-29 01:48:11,698:INFO:Initializing predict_model()
2024-03-29 01:48:11,698:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001AC4B4BB640>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001AC4B4BC160>)
2024-03-29 01:48:11,699:INFO:Checking exceptions
2024-03-29 01:48:11,699:INFO:Preloading libraries
2024-03-29 01:48:11,699:INFO:Set up data.
2024-03-29 01:48:11,711:INFO:Set up index.
2024-03-29 01:51:36,352:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-29 01:51:36,353:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-29 01:51:36,353:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-29 01:51:36,353:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-29 01:51:38,036:INFO:Initializing load_model()
2024-03-29 01:51:38,036:INFO:load_model(model_name=modele_ulrich_streamlit, platform=None, authentication=None, verbose=True)
2024-03-29 01:51:38,133:WARNING:C:\Users\ayena\anaconda3\envs\my_pycaret\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.3.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.18.1', 'ipywidgets': '7.7.0', 'tqdm': '4.66.2', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.3', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.3', 'imblearn': '0.12.0', 'category_encoders': '2.6.3', 'lightgbm': '4.3.0', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.8', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.9.19', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.0.0', 'pycaret': '3.2.0', 'IPython': '8.15.0', 'ipywidgets': '8.0.4', 'tqdm': '4.65.0', 'numpy': '1.24.3', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.1.1', 'sklearn': '1.2.2', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.57.1', 'requests': '2.31.0', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '2.0.2', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.5', 'machine': 'AMD64'}}
  warnings.warn(

2024-03-29 01:51:38,161:INFO:Initializing predict_model()
2024-03-29 01:51:38,162:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215A304F6D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000215A3269160>)
2024-03-29 01:51:38,163:INFO:Checking exceptions
2024-03-29 01:51:38,164:INFO:Preloading libraries
2024-03-29 01:51:38,167:INFO:Set up data.
2024-03-29 01:51:38,176:INFO:Set up index.
2024-03-29 01:51:49,364:INFO:Initializing predict_model()
2024-03-29 01:51:49,364:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215A304F6A0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000215A34CFEE0>)
2024-03-29 01:51:49,364:INFO:Checking exceptions
2024-03-29 01:51:49,364:INFO:Preloading libraries
2024-03-29 01:51:49,366:INFO:Set up data.
2024-03-29 01:51:49,375:INFO:Set up index.
2024-03-29 01:51:49,598:INFO:Initializing predict_model()
2024-03-29 01:51:49,598:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215A3019C40>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000215A34ED1F0>)
2024-03-29 01:51:49,598:INFO:Checking exceptions
2024-03-29 01:51:49,598:INFO:Preloading libraries
2024-03-29 01:51:49,598:INFO:Set up data.
2024-03-29 01:51:49,607:INFO:Set up index.
2024-03-29 01:51:51,160:INFO:Initializing predict_model()
2024-03-29 01:51:51,160:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215FE50B7F0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000215A34ED040>)
2024-03-29 01:51:51,160:INFO:Checking exceptions
2024-03-29 01:51:51,160:INFO:Preloading libraries
2024-03-29 01:51:51,162:INFO:Set up data.
2024-03-29 01:51:51,167:INFO:Set up index.
2024-03-29 01:51:51,409:INFO:Initializing predict_model()
2024-03-29 01:51:51,409:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215A32D5670>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000215A34CF9D0>)
2024-03-29 01:51:51,409:INFO:Checking exceptions
2024-03-29 01:51:51,409:INFO:Preloading libraries
2024-03-29 01:51:51,410:INFO:Set up data.
2024-03-29 01:51:51,417:INFO:Set up index.
2024-03-29 01:51:51,618:INFO:Initializing predict_model()
2024-03-29 01:51:51,618:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215A3213E80>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000215A34ED4C0>)
2024-03-29 01:51:51,618:INFO:Checking exceptions
2024-03-29 01:51:51,618:INFO:Preloading libraries
2024-03-29 01:51:51,618:INFO:Set up data.
2024-03-29 01:51:51,624:INFO:Set up index.
2024-03-29 01:51:51,822:INFO:Initializing predict_model()
2024-03-29 01:51:51,822:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215FE4F17C0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000215A34EDD30>)
2024-03-29 01:51:51,823:INFO:Checking exceptions
2024-03-29 01:51:51,823:INFO:Preloading libraries
2024-03-29 01:51:51,823:INFO:Set up data.
2024-03-29 01:51:51,829:INFO:Set up index.
2024-03-29 01:51:52,018:INFO:Initializing predict_model()
2024-03-29 01:51:52,018:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215A32D5250>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000215A34EDE50>)
2024-03-29 01:51:52,018:INFO:Checking exceptions
2024-03-29 01:51:52,018:INFO:Preloading libraries
2024-03-29 01:51:52,019:INFO:Set up data.
2024-03-29 01:51:52,025:INFO:Set up index.
2024-03-29 01:51:52,285:INFO:Initializing predict_model()
2024-03-29 01:51:52,285:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215A34F0CD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000215A34ED9D0>)
2024-03-29 01:51:52,285:INFO:Checking exceptions
2024-03-29 01:51:52,285:INFO:Preloading libraries
2024-03-29 01:51:52,286:INFO:Set up data.
2024-03-29 01:51:52,293:INFO:Set up index.
2024-03-29 01:51:52,521:INFO:Initializing predict_model()
2024-03-29 01:51:52,521:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215FFBE3520>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000215A34ED9D0>)
2024-03-29 01:51:52,521:INFO:Checking exceptions
2024-03-29 01:51:52,522:INFO:Preloading libraries
2024-03-29 01:51:52,522:INFO:Set up data.
2024-03-29 01:51:52,530:INFO:Set up index.
2024-03-29 01:51:52,784:INFO:Initializing predict_model()
2024-03-29 01:51:52,785:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215A34F0670>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000215A34EDDC0>)
2024-03-29 01:51:52,785:INFO:Checking exceptions
2024-03-29 01:51:52,785:INFO:Preloading libraries
2024-03-29 01:51:52,786:INFO:Set up data.
2024-03-29 01:51:52,796:INFO:Set up index.
2024-03-29 01:51:53,032:INFO:Initializing predict_model()
2024-03-29 01:51:53,032:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215A34E4AF0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000215A34EDD30>)
2024-03-29 01:51:53,032:INFO:Checking exceptions
2024-03-29 01:51:53,032:INFO:Preloading libraries
2024-03-29 01:51:53,033:INFO:Set up data.
2024-03-29 01:51:53,038:INFO:Set up index.
2024-03-29 01:51:53,250:INFO:Initializing predict_model()
2024-03-29 01:51:53,251:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215FFBE3820>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000215A34CFEE0>)
2024-03-29 01:51:53,251:INFO:Checking exceptions
2024-03-29 01:51:53,251:INFO:Preloading libraries
2024-03-29 01:51:53,252:INFO:Set up data.
2024-03-29 01:51:53,259:INFO:Set up index.
2024-03-29 01:51:53,439:INFO:Initializing predict_model()
2024-03-29 01:51:53,439:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215A32D5970>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000215A34ED160>)
2024-03-29 01:51:53,439:INFO:Checking exceptions
2024-03-29 01:51:53,439:INFO:Preloading libraries
2024-03-29 01:51:53,440:INFO:Set up data.
2024-03-29 01:51:53,444:INFO:Set up index.
2024-03-29 01:51:55,064:INFO:Initializing predict_model()
2024-03-29 01:51:55,064:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215FFBDEDC0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000215A34EDF70>)
2024-03-29 01:51:55,064:INFO:Checking exceptions
2024-03-29 01:51:55,064:INFO:Preloading libraries
2024-03-29 01:51:55,065:INFO:Set up data.
2024-03-29 01:51:55,070:INFO:Set up index.
2024-03-29 01:51:55,339:INFO:Initializing predict_model()
2024-03-29 01:51:55,339:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215FFBDEBE0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000215A34EDA60>)
2024-03-29 01:51:55,339:INFO:Checking exceptions
2024-03-29 01:51:55,339:INFO:Preloading libraries
2024-03-29 01:51:55,340:INFO:Set up data.
2024-03-29 01:51:55,349:INFO:Set up index.
2024-03-29 01:51:55,561:INFO:Initializing predict_model()
2024-03-29 01:51:55,561:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215FE4F19D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000215A34ED4C0>)
2024-03-29 01:51:55,561:INFO:Checking exceptions
2024-03-29 01:51:55,562:INFO:Preloading libraries
2024-03-29 01:51:55,562:INFO:Set up data.
2024-03-29 01:51:55,569:INFO:Set up index.
2024-03-29 01:51:57,831:INFO:Initializing predict_model()
2024-03-29 01:51:57,831:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215FE4F17F0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000215A34ED670>)
2024-03-29 01:51:57,831:INFO:Checking exceptions
2024-03-29 01:51:57,832:INFO:Preloading libraries
2024-03-29 01:51:57,832:INFO:Set up data.
2024-03-29 01:51:57,837:INFO:Set up index.
2024-03-29 01:52:04,480:INFO:Initializing predict_model()
2024-03-29 01:52:04,480:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215FFBDEDC0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000215A34EE040>)
2024-03-29 01:52:04,480:INFO:Checking exceptions
2024-03-29 01:52:04,480:INFO:Preloading libraries
2024-03-29 01:52:04,481:INFO:Set up data.
2024-03-29 01:52:04,488:INFO:Set up index.
2024-03-29 01:52:04,721:INFO:Initializing predict_model()
2024-03-29 01:52:04,721:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215A3019FA0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000215A34F21F0>)
2024-03-29 01:52:04,721:INFO:Checking exceptions
2024-03-29 01:52:04,721:INFO:Preloading libraries
2024-03-29 01:52:04,722:INFO:Set up data.
2024-03-29 01:52:04,730:INFO:Set up index.
2024-03-29 01:52:06,232:INFO:Initializing predict_model()
2024-03-29 01:52:06,233:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215A3213E80>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000215A34F2E50>)
2024-03-29 01:52:06,233:INFO:Checking exceptions
2024-03-29 01:52:06,233:INFO:Preloading libraries
2024-03-29 01:52:06,233:INFO:Set up data.
2024-03-29 01:52:06,239:INFO:Set up index.
2024-03-29 01:52:06,457:INFO:Initializing predict_model()
2024-03-29 01:52:06,457:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215A32D5C10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000215A34F2040>)
2024-03-29 01:52:06,457:INFO:Checking exceptions
2024-03-29 01:52:06,457:INFO:Preloading libraries
2024-03-29 01:52:06,457:INFO:Set up data.
2024-03-29 01:52:06,463:INFO:Set up index.
2024-03-29 01:52:06,690:INFO:Initializing predict_model()
2024-03-29 01:52:06,691:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215A32D5730>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000215A34F2310>)
2024-03-29 01:52:06,691:INFO:Checking exceptions
2024-03-29 01:52:06,691:INFO:Preloading libraries
2024-03-29 01:52:06,692:INFO:Set up data.
2024-03-29 01:52:06,702:INFO:Set up index.
2024-03-29 01:52:06,909:INFO:Initializing predict_model()
2024-03-29 01:52:06,909:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215A30335E0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000215A34F2F70>)
2024-03-29 01:52:06,909:INFO:Checking exceptions
2024-03-29 01:52:06,909:INFO:Preloading libraries
2024-03-29 01:52:06,910:INFO:Set up data.
2024-03-29 01:52:06,917:INFO:Set up index.
2024-03-29 01:52:07,121:INFO:Initializing predict_model()
2024-03-29 01:52:07,121:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215A34E9220>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000215A34F25E0>)
2024-03-29 01:52:07,121:INFO:Checking exceptions
2024-03-29 01:52:07,121:INFO:Preloading libraries
2024-03-29 01:52:07,122:INFO:Set up data.
2024-03-29 01:52:07,127:INFO:Set up index.
2024-03-29 01:52:07,306:INFO:Initializing predict_model()
2024-03-29 01:52:07,306:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215A30A28E0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000215A34F2D30>)
2024-03-29 01:52:07,306:INFO:Checking exceptions
2024-03-29 01:52:07,306:INFO:Preloading libraries
2024-03-29 01:52:07,306:INFO:Set up data.
2024-03-29 01:52:07,312:INFO:Set up index.
2024-03-29 01:52:09,694:INFO:Initializing predict_model()
2024-03-29 01:52:09,694:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215A34F07F0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000215A34F2280>)
2024-03-29 01:52:09,695:INFO:Checking exceptions
2024-03-29 01:52:09,695:INFO:Preloading libraries
2024-03-29 01:52:09,695:INFO:Set up data.
2024-03-29 01:52:09,701:INFO:Set up index.
2024-03-29 01:52:09,919:INFO:Initializing predict_model()
2024-03-29 01:52:09,920:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215FFBDEB50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000215A34CFAF0>)
2024-03-29 01:52:09,920:INFO:Checking exceptions
2024-03-29 01:52:09,920:INFO:Preloading libraries
2024-03-29 01:52:09,920:INFO:Set up data.
2024-03-29 01:52:09,925:INFO:Set up index.
2024-03-29 01:52:10,885:INFO:Initializing predict_model()
2024-03-29 01:52:10,885:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215FE30CEE0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000215A34F2AF0>)
2024-03-29 01:52:10,886:INFO:Checking exceptions
2024-03-29 01:52:10,886:INFO:Preloading libraries
2024-03-29 01:52:10,887:INFO:Set up data.
2024-03-29 01:52:10,892:INFO:Set up index.
2024-03-29 01:52:11,125:INFO:Initializing predict_model()
2024-03-29 01:52:11,125:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215A326A880>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000215FFBDA0D0>)
2024-03-29 01:52:11,125:INFO:Checking exceptions
2024-03-29 01:52:11,125:INFO:Preloading libraries
2024-03-29 01:52:11,126:INFO:Set up data.
2024-03-29 01:52:11,132:INFO:Set up index.
2024-03-29 01:52:11,373:INFO:Initializing predict_model()
2024-03-29 01:52:11,373:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215FFBDEEB0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000215A34F2280>)
2024-03-29 01:52:11,374:INFO:Checking exceptions
2024-03-29 01:52:11,374:INFO:Preloading libraries
2024-03-29 01:52:11,374:INFO:Set up data.
2024-03-29 01:52:11,378:INFO:Set up index.
2024-03-29 01:52:11,655:INFO:Initializing predict_model()
2024-03-29 01:52:11,655:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215A326AC40>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000215A34F2700>)
2024-03-29 01:52:11,655:INFO:Checking exceptions
2024-03-29 01:52:11,655:INFO:Preloading libraries
2024-03-29 01:52:11,656:INFO:Set up data.
2024-03-29 01:52:11,660:INFO:Set up index.
2024-03-29 01:52:11,870:INFO:Initializing predict_model()
2024-03-29 01:52:11,870:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000215FFBE3580>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000215A34F2A60>)
2024-03-29 01:52:11,870:INFO:Checking exceptions
2024-03-29 01:52:11,870:INFO:Preloading libraries
2024-03-29 01:52:11,871:INFO:Set up data.
2024-03-29 01:52:11,875:INFO:Set up index.
2024-03-29 01:56:53,763:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-29 01:56:53,764:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-29 01:56:53,764:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-29 01:56:53,764:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-29 01:56:56,961:INFO:Initializing load_model()
2024-03-29 01:56:56,962:INFO:load_model(model_name=modele_ulrich_streamlit, platform=None, authentication=None, verbose=True)
2024-03-29 01:56:57,052:WARNING:C:\Users\ayena\anaconda3\envs\my_pycaret\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.3.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.18.1', 'ipywidgets': '7.7.0', 'tqdm': '4.66.2', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.3', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.3', 'imblearn': '0.12.0', 'category_encoders': '2.6.3', 'lightgbm': '4.3.0', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.8', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.9.19', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.0.0', 'pycaret': '3.2.0', 'IPython': '8.15.0', 'ipywidgets': '8.0.4', 'tqdm': '4.65.0', 'numpy': '1.24.3', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.1.1', 'sklearn': '1.2.2', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.57.1', 'requests': '2.31.0', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '2.0.2', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.5', 'machine': 'AMD64'}}
  warnings.warn(

2024-03-29 01:56:57,075:INFO:Initializing predict_model()
2024-03-29 01:56:57,075:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FFBFB84A00>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FFBFB8BA60>)
2024-03-29 01:56:57,075:INFO:Checking exceptions
2024-03-29 01:56:57,076:INFO:Preloading libraries
2024-03-29 01:56:57,079:INFO:Set up data.
2024-03-29 01:56:57,084:INFO:Set up index.
2024-03-29 01:57:14,466:INFO:Initializing predict_model()
2024-03-29 01:57:14,466:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001FFBF97F4F0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FFBFBBEAF0>)
2024-03-29 01:57:14,467:INFO:Checking exceptions
2024-03-29 01:57:14,467:INFO:Preloading libraries
2024-03-29 01:57:14,468:INFO:Set up data.
2024-03-29 01:57:14,473:INFO:Set up index.
2024-03-29 01:59:21,929:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-29 01:59:21,929:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-29 01:59:21,929:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-29 01:59:21,929:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-29 01:59:24,148:INFO:Initializing load_model()
2024-03-29 01:59:24,148:INFO:load_model(model_name=modele_ulrich_streamlit, platform=None, authentication=None, verbose=True)
2024-03-29 01:59:24,237:WARNING:C:\Users\ayena\anaconda3\envs\my_pycaret\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.3.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.18.1', 'ipywidgets': '7.7.0', 'tqdm': '4.66.2', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.3', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.3', 'imblearn': '0.12.0', 'category_encoders': '2.6.3', 'lightgbm': '4.3.0', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.8', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.9.19', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.0.0', 'pycaret': '3.2.0', 'IPython': '8.15.0', 'ipywidgets': '8.0.4', 'tqdm': '4.65.0', 'numpy': '1.24.3', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.1.1', 'sklearn': '1.2.2', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.57.1', 'requests': '2.31.0', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '2.0.2', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.5', 'machine': 'AMD64'}}
  warnings.warn(

2024-03-29 01:59:24,257:INFO:Initializing predict_model()
2024-03-29 01:59:24,257:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002498C729790>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002498C93B8B0>)
2024-03-29 01:59:24,257:INFO:Checking exceptions
2024-03-29 01:59:24,257:INFO:Preloading libraries
2024-03-29 01:59:24,258:INFO:Set up data.
2024-03-29 01:59:24,262:INFO:Set up index.
2024-03-29 01:59:29,181:INFO:Initializing predict_model()
2024-03-29 01:59:29,181:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002498C729DC0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002498C96CA60>)
2024-03-29 01:59:29,181:INFO:Checking exceptions
2024-03-29 01:59:29,181:INFO:Preloading libraries
2024-03-29 01:59:29,182:INFO:Set up data.
2024-03-29 01:59:29,186:INFO:Set up index.
2024-03-29 01:59:52,628:INFO:Initializing predict_model()
2024-03-29 01:59:52,628:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000249E8793E20>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002498C9C08B0>)
2024-03-29 01:59:52,628:INFO:Checking exceptions
2024-03-29 01:59:52,628:INFO:Preloading libraries
2024-03-29 01:59:52,628:INFO:Set up data.
2024-03-29 01:59:52,636:INFO:Set up index.
2024-03-29 02:00:09,786:INFO:Initializing predict_model()
2024-03-29 02:00:09,786:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002498C729610>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002498C9C0820>)
2024-03-29 02:00:09,786:INFO:Checking exceptions
2024-03-29 02:00:09,786:INFO:Preloading libraries
2024-03-29 02:00:09,787:INFO:Set up data.
2024-03-29 02:00:09,791:INFO:Set up index.
2024-03-29 02:00:28,166:INFO:Initializing predict_model()
2024-03-29 02:00:28,167:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002498C9C2DC0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002498C9C09D0>)
2024-03-29 02:00:28,167:INFO:Checking exceptions
2024-03-29 02:00:28,167:INFO:Preloading libraries
2024-03-29 02:00:28,167:INFO:Set up data.
2024-03-29 02:00:28,172:INFO:Set up index.
2024-03-29 02:00:35,801:INFO:Initializing predict_model()
2024-03-29 02:00:35,801:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002498C9CF6D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002498C9C0940>)
2024-03-29 02:00:35,801:INFO:Checking exceptions
2024-03-29 02:00:35,801:INFO:Preloading libraries
2024-03-29 02:00:35,802:INFO:Set up data.
2024-03-29 02:00:35,806:INFO:Set up index.
2024-03-29 02:05:38,357:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-29 02:05:38,357:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-29 02:05:38,357:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-29 02:05:38,357:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-29 02:07:17,398:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-29 02:07:17,399:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-29 02:07:17,399:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-29 02:07:17,399:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-29 02:07:19,563:INFO:Initializing load_model()
2024-03-29 02:07:19,563:INFO:load_model(model_name=modele_ulrich_streamlit, platform=None, authentication=None, verbose=True)
2024-03-29 02:07:19,657:WARNING:C:\Users\ayena\anaconda3\envs\my_pycaret\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.3.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.18.1', 'ipywidgets': '7.7.0', 'tqdm': '4.66.2', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.3', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.3', 'imblearn': '0.12.0', 'category_encoders': '2.6.3', 'lightgbm': '4.3.0', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.8', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.9.19', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.0.0', 'pycaret': '3.2.0', 'IPython': '8.15.0', 'ipywidgets': '8.0.4', 'tqdm': '4.65.0', 'numpy': '1.24.3', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.1.1', 'sklearn': '1.2.2', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.57.1', 'requests': '2.31.0', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '2.0.2', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.5', 'machine': 'AMD64'}}
  warnings.warn(

2024-03-29 02:07:19,676:INFO:Initializing predict_model()
2024-03-29 02:07:19,676:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000206B85E0970>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000206B85CEE50>)
2024-03-29 02:07:19,676:INFO:Checking exceptions
2024-03-29 02:07:19,676:INFO:Preloading libraries
2024-03-29 02:07:19,679:INFO:Set up data.
2024-03-29 02:07:19,689:INFO:Set up index.
2024-03-29 02:07:25,930:INFO:Initializing predict_model()
2024-03-29 02:07:25,930:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000206A3F983A0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000206B85E5D30>)
2024-03-29 02:07:25,931:INFO:Checking exceptions
2024-03-29 02:07:25,931:INFO:Preloading libraries
2024-03-29 02:07:25,932:INFO:Set up data.
2024-03-29 02:07:25,939:INFO:Set up index.
2024-03-29 02:07:40,089:INFO:Initializing predict_model()
2024-03-29 02:07:40,090:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000206B85C6B50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000206B8696160>)
2024-03-29 02:07:40,090:INFO:Checking exceptions
2024-03-29 02:07:40,090:INFO:Preloading libraries
2024-03-29 02:07:40,090:INFO:Set up data.
2024-03-29 02:07:40,095:INFO:Set up index.
2024-03-29 02:07:46,784:INFO:Initializing predict_model()
2024-03-29 02:07:46,784:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000206B8639730>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000206B8637E50>)
2024-03-29 02:07:46,784:INFO:Checking exceptions
2024-03-29 02:07:46,784:INFO:Preloading libraries
2024-03-29 02:07:46,785:INFO:Set up data.
2024-03-29 02:07:46,789:INFO:Set up index.
2024-03-29 02:08:08,333:INFO:Initializing predict_model()
2024-03-29 02:08:08,333:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000206B84122B0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000206B8637D30>)
2024-03-29 02:08:08,334:INFO:Checking exceptions
2024-03-29 02:08:08,334:INFO:Preloading libraries
2024-03-29 02:08:08,334:INFO:Set up data.
2024-03-29 02:08:08,339:INFO:Set up index.
2024-03-29 02:08:13,437:INFO:Initializing predict_model()
2024-03-29 02:08:13,437:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000206B81D7850>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000206B8698280>)
2024-03-29 02:08:13,437:INFO:Checking exceptions
2024-03-29 02:08:13,438:INFO:Preloading libraries
2024-03-29 02:08:13,438:INFO:Set up data.
2024-03-29 02:08:13,442:INFO:Set up index.
2024-03-29 02:08:13,647:INFO:Initializing predict_model()
2024-03-29 02:08:13,647:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000206B8639A60>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000206B8637EE0>)
2024-03-29 02:08:13,647:INFO:Checking exceptions
2024-03-29 02:08:13,648:INFO:Preloading libraries
2024-03-29 02:08:13,648:INFO:Set up data.
2024-03-29 02:08:13,653:INFO:Set up index.
2024-03-29 02:08:29,442:INFO:Initializing predict_model()
2024-03-29 02:08:29,442:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000206938064C0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000206B8698790>)
2024-03-29 02:08:29,443:INFO:Checking exceptions
2024-03-29 02:08:29,443:INFO:Preloading libraries
2024-03-29 02:08:29,443:INFO:Set up data.
2024-03-29 02:08:29,448:INFO:Set up index.
2024-03-29 02:08:31,545:INFO:Initializing predict_model()
2024-03-29 02:08:31,545:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000206B86390D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000206B86981F0>)
2024-03-29 02:08:31,545:INFO:Checking exceptions
2024-03-29 02:08:31,545:INFO:Preloading libraries
2024-03-29 02:08:31,546:INFO:Set up data.
2024-03-29 02:08:31,551:INFO:Set up index.
2024-03-29 02:08:47,788:INFO:Initializing predict_model()
2024-03-29 02:08:47,788:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000206B85C6940>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000206B86980D0>)
2024-03-29 02:08:47,788:INFO:Checking exceptions
2024-03-29 02:08:47,789:INFO:Preloading libraries
2024-03-29 02:08:47,789:INFO:Set up data.
2024-03-29 02:08:47,794:INFO:Set up index.
2024-03-29 02:08:49,766:INFO:Initializing predict_model()
2024-03-29 02:08:49,766:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000206B85E0550>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000206B8637D30>)
2024-03-29 02:08:49,766:INFO:Checking exceptions
2024-03-29 02:08:49,766:INFO:Preloading libraries
2024-03-29 02:08:49,766:INFO:Set up data.
2024-03-29 02:08:49,772:INFO:Set up index.
2024-03-29 02:09:37,890:INFO:Initializing predict_model()
2024-03-29 02:09:37,890:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020693815F70>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000206937CA4C0>)
2024-03-29 02:09:37,890:INFO:Checking exceptions
2024-03-29 02:09:37,890:INFO:Preloading libraries
2024-03-29 02:09:37,890:INFO:Set up data.
2024-03-29 02:09:37,895:INFO:Set up index.
2024-03-29 02:09:39,515:INFO:Initializing predict_model()
2024-03-29 02:09:39,515:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020693815E20>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000206B8390DC0>)
2024-03-29 02:09:39,515:INFO:Checking exceptions
2024-03-29 02:09:39,515:INFO:Preloading libraries
2024-03-29 02:09:39,516:INFO:Set up data.
2024-03-29 02:09:39,521:INFO:Set up index.
2024-03-29 12:21:01,304:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-29 12:21:01,305:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-29 12:21:01,305:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-29 12:21:01,305:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-29 12:21:04,140:INFO:Initializing load_model()
2024-03-29 12:21:04,140:INFO:load_model(model_name=modele_ulrich_streamlit, platform=None, authentication=None, verbose=True)
2024-03-29 12:21:04,246:WARNING:C:\Users\ayena\anaconda3\envs\my_pycaret\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.3.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.18.1', 'ipywidgets': '7.7.0', 'tqdm': '4.66.2', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.3', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.3', 'imblearn': '0.12.0', 'category_encoders': '2.6.3', 'lightgbm': '4.3.0', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.8', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.9.19', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.0.0', 'pycaret': '3.2.0', 'IPython': '8.15.0', 'ipywidgets': '8.0.4', 'tqdm': '4.65.0', 'numpy': '1.24.3', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.1.1', 'sklearn': '1.2.2', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.57.1', 'requests': '2.31.0', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '2.0.2', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.5', 'machine': 'AMD64'}}
  warnings.warn(

2024-03-29 12:21:04,266:INFO:Initializing predict_model()
2024-03-29 12:21:04,266:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002A0C026CCD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002A0C0271A60>)
2024-03-29 12:21:04,266:INFO:Checking exceptions
2024-03-29 12:21:04,266:INFO:Preloading libraries
2024-03-29 12:21:04,269:INFO:Set up data.
2024-03-29 12:21:04,278:INFO:Set up index.
2024-03-29 12:21:10,773:INFO:Initializing predict_model()
2024-03-29 12:21:10,773:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002A09B4EC5B0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002A0C028DB80>)
2024-03-29 12:21:10,774:INFO:Checking exceptions
2024-03-29 12:21:10,774:INFO:Preloading libraries
2024-03-29 12:21:10,775:INFO:Set up data.
2024-03-29 12:21:10,779:INFO:Set up index.
2024-03-29 12:21:28,139:INFO:Initializing predict_model()
2024-03-29 12:21:28,139:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002A0C0056730>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002A0C036ED30>)
2024-03-29 12:21:28,139:INFO:Checking exceptions
2024-03-29 12:21:28,139:INFO:Preloading libraries
2024-03-29 12:21:28,140:INFO:Set up data.
2024-03-29 12:21:28,144:INFO:Set up index.
2024-03-29 12:21:28,364:INFO:Initializing predict_model()
2024-03-29 12:21:28,365:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002A0C0076190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002A0C036E8B0>)
2024-03-29 12:21:28,365:INFO:Checking exceptions
2024-03-29 12:21:28,365:INFO:Preloading libraries
2024-03-29 12:21:28,366:INFO:Set up data.
2024-03-29 12:21:28,370:INFO:Set up index.
2024-03-29 12:21:37,877:INFO:Initializing predict_model()
2024-03-29 12:21:37,877:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002A0BFE819A0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002A0C036EAF0>)
2024-03-29 12:21:37,878:INFO:Checking exceptions
2024-03-29 12:21:37,878:INFO:Preloading libraries
2024-03-29 12:21:37,878:INFO:Set up data.
2024-03-29 12:21:37,886:INFO:Set up index.
2024-03-29 12:21:38,123:INFO:Initializing predict_model()
2024-03-29 12:21:38,123:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002A0C02DC820>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002A0C036EE50>)
2024-03-29 12:21:38,123:INFO:Checking exceptions
2024-03-29 12:21:38,123:INFO:Preloading libraries
2024-03-29 12:21:38,124:INFO:Set up data.
2024-03-29 12:21:38,133:INFO:Set up index.
2024-03-29 12:21:46,532:INFO:Initializing predict_model()
2024-03-29 12:21:46,533:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002A0C00769A0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002A0C036E940>)
2024-03-29 12:21:46,533:INFO:Checking exceptions
2024-03-29 12:21:46,534:INFO:Preloading libraries
2024-03-29 12:21:46,535:INFO:Set up data.
2024-03-29 12:21:46,539:INFO:Set up index.
2024-03-29 12:21:49,360:INFO:Initializing predict_model()
2024-03-29 12:21:49,361:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002A0C0076910>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002A0C036E940>)
2024-03-29 12:21:49,361:INFO:Checking exceptions
2024-03-29 12:21:49,361:INFO:Preloading libraries
2024-03-29 12:21:49,362:INFO:Set up data.
2024-03-29 12:21:49,367:INFO:Set up index.
2024-03-29 12:37:06,087:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-29 12:37:06,087:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-29 12:37:06,087:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-29 12:37:06,088:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-29 12:37:10,965:INFO:Initializing load_model()
2024-03-29 12:37:10,965:INFO:load_model(model_name=modele_ulrich_streamlit, platform=None, authentication=None, verbose=True)
2024-03-29 12:37:11,097:WARNING:C:\Users\ayena\anaconda3\envs\my_pycaret\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.3.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.18.1', 'ipywidgets': '7.7.0', 'tqdm': '4.66.2', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.3', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.3', 'imblearn': '0.12.0', 'category_encoders': '2.6.3', 'lightgbm': '4.3.0', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.8', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.9.19', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.0.0', 'pycaret': '3.2.0', 'IPython': '8.15.0', 'ipywidgets': '8.0.4', 'tqdm': '4.65.0', 'numpy': '1.24.3', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.1.1', 'sklearn': '1.2.2', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.57.1', 'requests': '2.31.0', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '2.0.2', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.5', 'machine': 'AMD64'}}
  warnings.warn(

2024-03-29 12:37:11,135:INFO:Initializing predict_model()
2024-03-29 12:37:11,135:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018F00764880>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000018F00A61D30>)
2024-03-29 12:37:11,136:INFO:Checking exceptions
2024-03-29 12:37:11,136:INFO:Preloading libraries
2024-03-29 12:37:11,142:INFO:Set up data.
2024-03-29 12:37:11,152:INFO:Set up index.
2024-03-29 12:37:41,579:INFO:Initializing predict_model()
2024-03-29 12:37:41,579:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000018F00A5BBB0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000018F00A93EE0>)
2024-03-29 12:37:41,579:INFO:Checking exceptions
2024-03-29 12:37:41,580:INFO:Preloading libraries
2024-03-29 12:37:41,580:INFO:Set up data.
2024-03-29 12:37:41,589:INFO:Set up index.
2024-03-29 12:44:43,511:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-29 12:44:43,512:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-29 12:44:43,512:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-29 12:44:43,512:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-29 12:44:48,866:INFO:Initializing load_model()
2024-03-29 12:44:48,866:INFO:load_model(model_name=modele_ulrich_streamlit, platform=None, authentication=None, verbose=True)
2024-03-29 12:44:48,983:WARNING:C:\Users\ayena\anaconda3\envs\my_pycaret\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.3.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.18.1', 'ipywidgets': '7.7.0', 'tqdm': '4.66.2', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.3', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.3', 'imblearn': '0.12.0', 'category_encoders': '2.6.3', 'lightgbm': '4.3.0', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.8', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.9.19', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.0.0', 'pycaret': '3.2.0', 'IPython': '8.15.0', 'ipywidgets': '8.0.4', 'tqdm': '4.65.0', 'numpy': '1.24.3', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.1.1', 'sklearn': '1.2.2', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.57.1', 'requests': '2.31.0', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '2.0.2', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.5', 'machine': 'AMD64'}}
  warnings.warn(

2024-03-29 12:44:49,008:INFO:Initializing predict_model()
2024-03-29 12:44:49,008:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026170BE0820>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000026170BEC8B0>)
2024-03-29 12:44:49,009:INFO:Checking exceptions
2024-03-29 12:44:49,009:INFO:Preloading libraries
2024-03-29 12:44:49,011:INFO:Set up data.
2024-03-29 12:44:49,020:INFO:Set up index.
2024-03-29 12:44:55,978:INFO:Initializing predict_model()
2024-03-29 12:44:55,978:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000026170BE0520>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000026170B3D310>)
2024-03-29 12:44:55,978:INFO:Checking exceptions
2024-03-29 12:44:55,978:INFO:Preloading libraries
2024-03-29 12:44:55,978:INFO:Set up data.
2024-03-29 12:44:55,986:INFO:Set up index.
2024-03-29 12:48:52,126:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-29 12:48:52,126:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-29 12:48:52,126:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-29 12:48:52,126:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-29 12:48:54,711:INFO:Initializing load_model()
2024-03-29 12:48:54,711:INFO:load_model(model_name=modele_ulrich_streamlit, platform=None, authentication=None, verbose=True)
2024-03-29 12:48:54,826:WARNING:C:\Users\ayena\anaconda3\envs\my_pycaret\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.3.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.18.1', 'ipywidgets': '7.7.0', 'tqdm': '4.66.2', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.3', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.3', 'imblearn': '0.12.0', 'category_encoders': '2.6.3', 'lightgbm': '4.3.0', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.8', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.9.19', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.0.0', 'pycaret': '3.2.0', 'IPython': '8.15.0', 'ipywidgets': '8.0.4', 'tqdm': '4.65.0', 'numpy': '1.24.3', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.1.1', 'sklearn': '1.2.2', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.57.1', 'requests': '2.31.0', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '2.0.2', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.5', 'machine': 'AMD64'}}
  warnings.warn(

2024-03-29 12:48:54,852:INFO:Initializing predict_model()
2024-03-29 12:48:54,852:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000019EE28BC2B0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000019E87C03040>)
2024-03-29 12:48:54,852:INFO:Checking exceptions
2024-03-29 12:48:54,852:INFO:Preloading libraries
2024-03-29 12:48:54,855:INFO:Set up data.
2024-03-29 12:48:54,861:INFO:Set up index.
2024-03-29 12:49:02,024:INFO:Initializing predict_model()
2024-03-29 12:49:02,024:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000019E878B1520>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000019E87C03EE0>)
2024-03-29 12:49:02,024:INFO:Checking exceptions
2024-03-29 12:49:02,024:INFO:Preloading libraries
2024-03-29 12:49:02,025:INFO:Set up data.
2024-03-29 12:49:02,030:INFO:Set up index.
2024-03-29 12:49:04,821:INFO:Initializing predict_model()
2024-03-29 12:49:04,822:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000019E878F6AC0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000019E88C4D0D0>)
2024-03-29 12:49:04,822:INFO:Checking exceptions
2024-03-29 12:49:04,822:INFO:Preloading libraries
2024-03-29 12:49:04,822:INFO:Set up data.
2024-03-29 12:49:04,826:INFO:Set up index.
2024-03-29 12:49:06,666:INFO:Initializing predict_model()
2024-03-29 12:49:06,667:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000019E88C483A0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000019E87C03AF0>)
2024-03-29 12:49:06,667:INFO:Checking exceptions
2024-03-29 12:49:06,667:INFO:Preloading libraries
2024-03-29 12:49:06,667:INFO:Set up data.
2024-03-29 12:49:06,671:INFO:Set up index.
2024-03-29 12:49:09,011:INFO:Initializing predict_model()
2024-03-29 12:49:09,011:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000019E88C48CD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000019E87C03160>)
2024-03-29 12:49:09,011:INFO:Checking exceptions
2024-03-29 12:49:09,011:INFO:Preloading libraries
2024-03-29 12:49:09,012:INFO:Set up data.
2024-03-29 12:49:09,021:INFO:Set up index.
2024-03-29 12:49:15,128:INFO:Initializing predict_model()
2024-03-29 12:49:15,129:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000019E876FEEB0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000019E87C03AF0>)
2024-03-29 12:49:15,129:INFO:Checking exceptions
2024-03-29 12:49:15,129:INFO:Preloading libraries
2024-03-29 12:49:15,130:INFO:Set up data.
2024-03-29 12:49:15,136:INFO:Set up index.
2024-03-29 12:49:17,280:INFO:Initializing predict_model()
2024-03-29 12:49:17,280:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000019E88C48640>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000019E87C03F70>)
2024-03-29 12:49:17,280:INFO:Checking exceptions
2024-03-29 12:49:17,280:INFO:Preloading libraries
2024-03-29 12:49:17,281:INFO:Set up data.
2024-03-29 12:49:17,289:INFO:Set up index.
2024-03-29 12:54:55,844:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-29 12:54:55,844:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-29 12:54:55,844:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-29 12:54:55,844:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-03-29 12:54:58,269:INFO:Initializing load_model()
2024-03-29 12:54:58,270:INFO:load_model(model_name=modele_ulrich_streamlit, platform=None, authentication=None, verbose=True)
2024-03-29 12:54:58,395:WARNING:C:\Users\ayena\anaconda3\envs\my_pycaret\lib\site-packages\pycaret\internal\pipeline.py:145: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '23.3.1', 'setuptools': '68.2.2', 'pycaret': '3.2.0', 'IPython': '8.18.1', 'ipywidgets': '7.7.0', 'tqdm': '4.66.2', 'numpy': '1.24.4', 'pandas': '1.5.3', 'jinja2': '3.1.3', 'scipy': '1.10.1', 'joblib': '1.3.2', 'sklearn': '1.2.2', 'pyod': '1.1.3', 'imblearn': '0.12.0', 'category_encoders': '2.6.3', 'lightgbm': '4.3.0', 'numba': '0.57.0', 'requests': '2.31.0', 'matplotlib': '3.5.2', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.8.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.1', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.8', 'markupsafe': '2.1.3', 'pickle5': 'Not installed', 'cloudpickle': '3.0.0', 'deprecation': '2.1.0', 'xxhash': '3.4.1', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.9.19', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '23.2.1', 'setuptools': '68.0.0', 'pycaret': '3.2.0', 'IPython': '8.15.0', 'ipywidgets': '8.0.4', 'tqdm': '4.65.0', 'numpy': '1.24.3', 'pandas': '1.5.3', 'jinja2': '3.1.2', 'scipy': '1.10.1', 'joblib': '1.1.1', 'sklearn': '1.2.2', 'pyod': '1.1.2', 'imblearn': '0.10.1', 'category_encoders': '2.6.3', 'lightgbm': '4.1.0', 'numba': '0.57.1', 'requests': '2.31.0', 'matplotlib': '3.6.0', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.9.0', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.0', 'sktime': '0.21.1', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '5.9.0', 'markupsafe': '2.1.1', 'pickle5': 'Not installed', 'cloudpickle': '2.2.1', 'deprecation': '2.1.0', 'xxhash': '2.0.2', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.5', 'machine': 'AMD64'}}
  warnings.warn(

2024-03-29 12:54:58,426:INFO:Initializing predict_model()
2024-03-29 12:54:58,427:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C825780790>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002C8257839D0>)
2024-03-29 12:54:58,427:INFO:Checking exceptions
2024-03-29 12:54:58,427:INFO:Preloading libraries
2024-03-29 12:54:58,428:INFO:Set up data.
2024-03-29 12:54:58,437:INFO:Set up index.
2024-03-29 12:54:58,560:INFO:Initializing predict_model()
2024-03-29 12:54:58,560:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C82548AFA0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002C8256BC670>)
2024-03-29 12:54:58,560:INFO:Checking exceptions
2024-03-29 12:54:58,561:INFO:Preloading libraries
2024-03-29 12:54:58,561:INFO:Set up data.
2024-03-29 12:54:58,565:INFO:Set up index.
2024-03-29 12:55:05,199:INFO:Initializing predict_model()
2024-03-29 12:55:05,200:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C825780A90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002C8257A5670>)
2024-03-29 12:55:05,200:INFO:Checking exceptions
2024-03-29 12:55:05,200:INFO:Preloading libraries
2024-03-29 12:55:05,201:INFO:Set up data.
2024-03-29 12:55:05,210:INFO:Set up index.
2024-03-29 12:55:05,340:INFO:Initializing predict_model()
2024-03-29 12:55:05,340:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C82544F2E0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002C800707EE0>)
2024-03-29 12:55:05,340:INFO:Checking exceptions
2024-03-29 12:55:05,340:INFO:Preloading libraries
2024-03-29 12:55:05,341:INFO:Set up data.
2024-03-29 12:55:05,344:INFO:Set up index.
2024-03-29 12:55:24,580:INFO:Initializing predict_model()
2024-03-29 12:55:24,581:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C825448A90>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002C8257A58B0>)
2024-03-29 12:55:24,581:INFO:Checking exceptions
2024-03-29 12:55:24,581:INFO:Preloading libraries
2024-03-29 12:55:24,582:INFO:Set up data.
2024-03-29 12:55:24,588:INFO:Set up index.
2024-03-29 12:55:24,677:INFO:Initializing predict_model()
2024-03-29 12:55:24,678:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C800C88940>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002C8008891F0>)
2024-03-29 12:55:24,678:INFO:Checking exceptions
2024-03-29 12:55:24,678:INFO:Preloading libraries
2024-03-29 12:55:24,678:INFO:Set up data.
2024-03-29 12:55:24,686:INFO:Set up index.
2024-03-29 12:55:24,871:INFO:Initializing predict_model()
2024-03-29 12:55:24,872:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C825448DF0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002C8257A54C0>)
2024-03-29 12:55:24,872:INFO:Checking exceptions
2024-03-29 12:55:24,872:INFO:Preloading libraries
2024-03-29 12:55:24,873:INFO:Set up data.
2024-03-29 12:55:24,878:INFO:Set up index.
2024-03-29 12:55:24,964:INFO:Initializing predict_model()
2024-03-29 12:55:24,964:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C82544F070>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002C8008891F0>)
2024-03-29 12:55:24,964:INFO:Checking exceptions
2024-03-29 12:55:24,964:INFO:Preloading libraries
2024-03-29 12:55:24,965:INFO:Set up data.
2024-03-29 12:55:24,968:INFO:Set up index.
2024-03-29 12:55:27,952:INFO:Initializing predict_model()
2024-03-29 12:55:27,952:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C825780AF0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002C8257A5CA0>)
2024-03-29 12:55:27,952:INFO:Checking exceptions
2024-03-29 12:55:27,952:INFO:Preloading libraries
2024-03-29 12:55:27,952:INFO:Set up data.
2024-03-29 12:55:27,958:INFO:Set up index.
2024-03-29 12:55:28,057:INFO:Initializing predict_model()
2024-03-29 12:55:28,057:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C825780E80>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002C8256BC5E0>)
2024-03-29 12:55:28,057:INFO:Checking exceptions
2024-03-29 12:55:28,057:INFO:Preloading libraries
2024-03-29 12:55:28,058:INFO:Set up data.
2024-03-29 12:55:28,061:INFO:Set up index.
2024-03-29 12:55:29,704:INFO:Initializing predict_model()
2024-03-29 12:55:29,705:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C825780FD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002C8257A5F70>)
2024-03-29 12:55:29,705:INFO:Checking exceptions
2024-03-29 12:55:29,705:INFO:Preloading libraries
2024-03-29 12:55:29,706:INFO:Set up data.
2024-03-29 12:55:29,714:INFO:Set up index.
2024-03-29 12:55:29,814:INFO:Initializing predict_model()
2024-03-29 12:55:29,815:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C825780E20>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002C825427EE0>)
2024-03-29 12:55:29,815:INFO:Checking exceptions
2024-03-29 12:55:29,815:INFO:Preloading libraries
2024-03-29 12:55:29,816:INFO:Set up data.
2024-03-29 12:55:29,820:INFO:Set up index.
2024-03-29 12:55:30,826:INFO:Initializing predict_model()
2024-03-29 12:55:30,826:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C825780FA0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002C8257A5820>)
2024-03-29 12:55:30,827:INFO:Checking exceptions
2024-03-29 12:55:30,827:INFO:Preloading libraries
2024-03-29 12:55:30,828:INFO:Set up data.
2024-03-29 12:55:30,834:INFO:Set up index.
2024-03-29 12:55:30,952:INFO:Initializing predict_model()
2024-03-29 12:55:30,952:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C825767A60>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002C8008891F0>)
2024-03-29 12:55:30,952:INFO:Checking exceptions
2024-03-29 12:55:30,953:INFO:Preloading libraries
2024-03-29 12:55:30,953:INFO:Set up data.
2024-03-29 12:55:30,958:INFO:Set up index.
2024-03-29 12:55:31,172:INFO:Initializing predict_model()
2024-03-29 12:55:31,172:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C800892EE0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002C8257A54C0>)
2024-03-29 12:55:31,173:INFO:Checking exceptions
2024-03-29 12:55:31,173:INFO:Preloading libraries
2024-03-29 12:55:31,173:INFO:Set up data.
2024-03-29 12:55:31,178:INFO:Set up index.
2024-03-29 12:55:31,271:INFO:Initializing predict_model()
2024-03-29 12:55:31,271:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C825780730>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002C825427EE0>)
2024-03-29 12:55:31,272:INFO:Checking exceptions
2024-03-29 12:55:31,272:INFO:Preloading libraries
2024-03-29 12:55:31,272:INFO:Set up data.
2024-03-29 12:55:31,275:INFO:Set up index.
2024-03-29 12:55:32,663:INFO:Initializing predict_model()
2024-03-29 12:55:32,663:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C8008DADC0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002C8257A5AF0>)
2024-03-29 12:55:32,663:INFO:Checking exceptions
2024-03-29 12:55:32,664:INFO:Preloading libraries
2024-03-29 12:55:32,665:INFO:Set up data.
2024-03-29 12:55:32,670:INFO:Set up index.
2024-03-29 12:55:32,769:INFO:Initializing predict_model()
2024-03-29 12:55:32,769:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C825780A60>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002C8256BC670>)
2024-03-29 12:55:32,769:INFO:Checking exceptions
2024-03-29 12:55:32,770:INFO:Preloading libraries
2024-03-29 12:55:32,770:INFO:Set up data.
2024-03-29 12:55:32,775:INFO:Set up index.
2024-03-29 12:55:32,962:INFO:Initializing predict_model()
2024-03-29 12:55:32,962:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C8257A99D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002C8257A5940>)
2024-03-29 12:55:32,962:INFO:Checking exceptions
2024-03-29 12:55:32,962:INFO:Preloading libraries
2024-03-29 12:55:32,963:INFO:Set up data.
2024-03-29 12:55:32,968:INFO:Set up index.
2024-03-29 12:55:33,050:INFO:Initializing predict_model()
2024-03-29 12:55:33,051:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C8008CE310>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002C82547DEE0>)
2024-03-29 12:55:33,051:INFO:Checking exceptions
2024-03-29 12:55:33,051:INFO:Preloading libraries
2024-03-29 12:55:33,052:INFO:Set up data.
2024-03-29 12:55:33,055:INFO:Set up index.
2024-03-29 12:55:33,333:INFO:Initializing predict_model()
2024-03-29 12:55:33,333:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C825780C10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002C8257A5700>)
2024-03-29 12:55:33,334:INFO:Checking exceptions
2024-03-29 12:55:33,334:INFO:Preloading libraries
2024-03-29 12:55:33,334:INFO:Set up data.
2024-03-29 12:55:33,339:INFO:Set up index.
2024-03-29 12:55:33,430:INFO:Initializing predict_model()
2024-03-29 12:55:33,431:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C8008DAF10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002C8008891F0>)
2024-03-29 12:55:33,431:INFO:Checking exceptions
2024-03-29 12:55:33,431:INFO:Preloading libraries
2024-03-29 12:55:33,431:INFO:Set up data.
2024-03-29 12:55:33,435:INFO:Set up index.
2024-03-29 12:55:40,779:INFO:Initializing predict_model()
2024-03-29 12:55:40,779:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C8008CE1F0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002C8257A5AF0>)
2024-03-29 12:55:40,779:INFO:Checking exceptions
2024-03-29 12:55:40,779:INFO:Preloading libraries
2024-03-29 12:55:40,780:INFO:Set up data.
2024-03-29 12:55:40,787:INFO:Set up index.
2024-03-29 12:55:40,890:INFO:Initializing predict_model()
2024-03-29 12:55:40,890:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C825476D30>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002C825427EE0>)
2024-03-29 12:55:40,890:INFO:Checking exceptions
2024-03-29 12:55:40,890:INFO:Preloading libraries
2024-03-29 12:55:40,891:INFO:Set up data.
2024-03-29 12:55:40,894:INFO:Set up index.
2024-03-29 12:55:44,244:INFO:Initializing predict_model()
2024-03-29 12:55:44,245:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C825448B50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002C8257A5A60>)
2024-03-29 12:55:44,245:INFO:Checking exceptions
2024-03-29 12:55:44,245:INFO:Preloading libraries
2024-03-29 12:55:44,246:INFO:Set up data.
2024-03-29 12:55:44,251:INFO:Set up index.
2024-03-29 12:55:44,331:INFO:Initializing predict_model()
2024-03-29 12:55:44,332:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C82548AEE0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002C825427F70>)
2024-03-29 12:55:44,332:INFO:Checking exceptions
2024-03-29 12:55:44,332:INFO:Preloading libraries
2024-03-29 12:55:44,333:INFO:Set up data.
2024-03-29 12:55:44,336:INFO:Set up index.
2024-03-29 12:55:57,382:INFO:Initializing predict_model()
2024-03-29 12:55:57,383:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C8257A9040>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002C8257A5CA0>)
2024-03-29 12:55:57,383:INFO:Checking exceptions
2024-03-29 12:55:57,383:INFO:Preloading libraries
2024-03-29 12:55:57,384:INFO:Set up data.
2024-03-29 12:55:57,389:INFO:Set up index.
2024-03-29 12:55:57,485:INFO:Initializing predict_model()
2024-03-29 12:55:57,485:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C825448190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002C82547DEE0>)
2024-03-29 12:55:57,485:INFO:Checking exceptions
2024-03-29 12:55:57,485:INFO:Preloading libraries
2024-03-29 12:55:57,485:INFO:Set up data.
2024-03-29 12:55:57,489:INFO:Set up index.
2024-03-29 12:55:57,683:INFO:Initializing predict_model()
2024-03-29 12:55:57,683:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C82529A9D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002C8257A54C0>)
2024-03-29 12:55:57,683:INFO:Checking exceptions
2024-03-29 12:55:57,683:INFO:Preloading libraries
2024-03-29 12:55:57,683:INFO:Set up data.
2024-03-29 12:55:57,687:INFO:Set up index.
2024-03-29 12:55:57,773:INFO:Initializing predict_model()
2024-03-29 12:55:57,773:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C8008DAEE0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002C8257A54C0>)
2024-03-29 12:55:57,773:INFO:Checking exceptions
2024-03-29 12:55:57,773:INFO:Preloading libraries
2024-03-29 12:55:57,773:INFO:Set up data.
2024-03-29 12:55:57,778:INFO:Set up index.
2024-03-29 12:56:01,044:INFO:Initializing predict_model()
2024-03-29 12:56:01,044:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C825448DF0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002C8257A55E0>)
2024-03-29 12:56:01,045:INFO:Checking exceptions
2024-03-29 12:56:01,045:INFO:Preloading libraries
2024-03-29 12:56:01,045:INFO:Set up data.
2024-03-29 12:56:01,053:INFO:Set up index.
2024-03-29 12:56:01,154:INFO:Initializing predict_model()
2024-03-29 12:56:01,154:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C82548AFD0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002C825427F70>)
2024-03-29 12:56:01,154:INFO:Checking exceptions
2024-03-29 12:56:01,155:INFO:Preloading libraries
2024-03-29 12:56:01,155:INFO:Set up data.
2024-03-29 12:56:01,159:INFO:Set up index.
2024-03-29 12:56:08,091:INFO:Initializing predict_model()
2024-03-29 12:56:08,091:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C8008CE1C0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002C8257A5CA0>)
2024-03-29 12:56:08,091:INFO:Checking exceptions
2024-03-29 12:56:08,091:INFO:Preloading libraries
2024-03-29 12:56:08,092:INFO:Set up data.
2024-03-29 12:56:08,098:INFO:Set up index.
2024-03-29 12:56:08,206:INFO:Initializing predict_model()
2024-03-29 12:56:08,207:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C82548AEE0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002C82547DEE0>)
2024-03-29 12:56:08,207:INFO:Checking exceptions
2024-03-29 12:56:08,207:INFO:Preloading libraries
2024-03-29 12:56:08,207:INFO:Set up data.
2024-03-29 12:56:08,210:INFO:Set up index.
2024-03-29 12:56:08,382:INFO:Initializing predict_model()
2024-03-29 12:56:08,382:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C8257808E0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002C8257A5700>)
2024-03-29 12:56:08,382:INFO:Checking exceptions
2024-03-29 12:56:08,382:INFO:Preloading libraries
2024-03-29 12:56:08,383:INFO:Set up data.
2024-03-29 12:56:08,387:INFO:Set up index.
2024-03-29 12:56:08,479:INFO:Initializing predict_model()
2024-03-29 12:56:08,479:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C8008DA940>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002C82547DEE0>)
2024-03-29 12:56:08,479:INFO:Checking exceptions
2024-03-29 12:56:08,479:INFO:Preloading libraries
2024-03-29 12:56:08,479:INFO:Set up data.
2024-03-29 12:56:08,483:INFO:Set up index.
2024-03-29 12:57:38,285:INFO:Initializing predict_model()
2024-03-29 12:57:38,285:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C825448DF0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002C8257A5AF0>)
2024-03-29 12:57:38,285:INFO:Checking exceptions
2024-03-29 12:57:38,285:INFO:Preloading libraries
2024-03-29 12:57:38,286:INFO:Set up data.
2024-03-29 12:57:38,291:INFO:Set up index.
2024-03-29 12:57:38,405:INFO:Initializing predict_model()
2024-03-29 12:57:38,405:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C8006FCE50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002C8256BC550>)
2024-03-29 12:57:38,405:INFO:Checking exceptions
2024-03-29 12:57:38,406:INFO:Preloading libraries
2024-03-29 12:57:38,406:INFO:Set up data.
2024-03-29 12:57:38,409:INFO:Set up index.
2024-03-29 12:58:03,912:INFO:Initializing predict_model()
2024-03-29 12:58:03,912:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C825780760>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002C825427EE0>)
2024-03-29 12:58:03,912:INFO:Checking exceptions
2024-03-29 12:58:03,913:INFO:Preloading libraries
2024-03-29 12:58:03,913:INFO:Set up data.
2024-03-29 12:58:03,920:INFO:Set up index.
2024-03-29 12:58:04,076:INFO:Initializing predict_model()
2024-03-29 12:58:04,076:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C82544F280>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002C8006EC9D0>)
2024-03-29 12:58:04,077:INFO:Checking exceptions
2024-03-29 12:58:04,077:INFO:Preloading libraries
2024-03-29 12:58:04,078:INFO:Set up data.
2024-03-29 12:58:04,089:INFO:Set up index.
2024-03-29 12:58:20,704:INFO:Initializing predict_model()
2024-03-29 12:58:20,705:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C825780700>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002C800889310>)
2024-03-29 12:58:20,705:INFO:Checking exceptions
2024-03-29 12:58:20,705:INFO:Preloading libraries
2024-03-29 12:58:20,705:INFO:Set up data.
2024-03-29 12:58:20,711:INFO:Set up index.
2024-03-29 12:58:20,821:INFO:Initializing predict_model()
2024-03-29 12:58:20,821:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C8008CE2B0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002C82547DEE0>)
2024-03-29 12:58:20,821:INFO:Checking exceptions
2024-03-29 12:58:20,822:INFO:Preloading libraries
2024-03-29 12:58:20,822:INFO:Set up data.
2024-03-29 12:58:20,827:INFO:Set up index.
2024-03-29 12:58:28,536:INFO:Initializing predict_model()
2024-03-29 12:58:28,536:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C825780640>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002C8257A58B0>)
2024-03-29 12:58:28,536:INFO:Checking exceptions
2024-03-29 12:58:28,536:INFO:Preloading libraries
2024-03-29 12:58:28,536:INFO:Set up data.
2024-03-29 12:58:28,540:INFO:Set up index.
2024-03-29 12:58:28,628:INFO:Initializing predict_model()
2024-03-29 12:58:28,628:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C8257726A0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002C8007070D0>)
2024-03-29 12:58:28,628:INFO:Checking exceptions
2024-03-29 12:58:28,628:INFO:Preloading libraries
2024-03-29 12:58:28,629:INFO:Set up data.
2024-03-29 12:58:28,633:INFO:Set up index.
2024-03-29 12:58:31,523:INFO:Initializing predict_model()
2024-03-29 12:58:31,524:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C82529A820>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002C8257A5CA0>)
2024-03-29 12:58:31,524:INFO:Checking exceptions
2024-03-29 12:58:31,524:INFO:Preloading libraries
2024-03-29 12:58:31,525:INFO:Set up data.
2024-03-29 12:58:31,533:INFO:Set up index.
2024-03-29 12:58:31,702:INFO:Initializing predict_model()
2024-03-29 12:58:31,703:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C82529A8B0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002C8256BC670>)
2024-03-29 12:58:31,703:INFO:Checking exceptions
2024-03-29 12:58:31,703:INFO:Preloading libraries
2024-03-29 12:58:31,703:INFO:Set up data.
2024-03-29 12:58:31,713:INFO:Set up index.
2024-03-29 12:58:39,570:INFO:Initializing predict_model()
2024-03-29 12:58:39,571:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C8257804F0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002C8257A5550>)
2024-03-29 12:58:39,571:INFO:Checking exceptions
2024-03-29 12:58:39,571:INFO:Preloading libraries
2024-03-29 12:58:39,571:INFO:Set up data.
2024-03-29 12:58:39,575:INFO:Set up index.
2024-03-29 12:58:39,669:INFO:Initializing predict_model()
2024-03-29 12:58:39,669:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C8008CE310>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002C8256BC550>)
2024-03-29 12:58:39,669:INFO:Checking exceptions
2024-03-29 12:58:39,669:INFO:Preloading libraries
2024-03-29 12:58:39,669:INFO:Set up data.
2024-03-29 12:58:39,673:INFO:Set up index.
2024-03-29 12:58:42,961:INFO:Initializing predict_model()
2024-03-29 12:58:42,962:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C8008CE100>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002C8256BC670>)
2024-03-29 12:58:42,962:INFO:Checking exceptions
2024-03-29 12:58:42,962:INFO:Preloading libraries
2024-03-29 12:58:42,962:INFO:Set up data.
2024-03-29 12:58:42,968:INFO:Set up index.
2024-03-29 12:58:43,071:INFO:Initializing predict_model()
2024-03-29 12:58:43,072:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C825476D30>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002C8256BC670>)
2024-03-29 12:58:43,072:INFO:Checking exceptions
2024-03-29 12:58:43,073:INFO:Preloading libraries
2024-03-29 12:58:43,073:INFO:Set up data.
2024-03-29 12:58:43,076:INFO:Set up index.
2024-03-29 12:58:53,578:INFO:Initializing predict_model()
2024-03-29 12:58:53,578:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C8008DA2B0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002C825783CA0>)
2024-03-29 12:58:53,578:INFO:Checking exceptions
2024-03-29 12:58:53,578:INFO:Preloading libraries
2024-03-29 12:58:53,579:INFO:Set up data.
2024-03-29 12:58:53,587:INFO:Set up index.
2024-03-29 12:58:53,734:INFO:Initializing predict_model()
2024-03-29 12:58:53,734:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C82544F280>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002C825783CA0>)
2024-03-29 12:58:53,735:INFO:Checking exceptions
2024-03-29 12:58:53,736:INFO:Preloading libraries
2024-03-29 12:58:53,737:INFO:Set up data.
2024-03-29 12:58:53,763:INFO:Set up index.
2024-03-29 12:59:08,652:INFO:Initializing predict_model()
2024-03-29 12:59:08,652:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C8008CE1F0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002C8257A55E0>)
2024-03-29 12:59:08,653:INFO:Checking exceptions
2024-03-29 12:59:08,653:INFO:Preloading libraries
2024-03-29 12:59:08,653:INFO:Set up data.
2024-03-29 12:59:08,660:INFO:Set up index.
2024-03-29 12:59:08,846:INFO:Initializing predict_model()
2024-03-29 12:59:08,846:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C8008DAE50>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002C8007070D0>)
2024-03-29 12:59:08,846:INFO:Checking exceptions
2024-03-29 12:59:08,847:INFO:Preloading libraries
2024-03-29 12:59:08,847:INFO:Set up data.
2024-03-29 12:59:08,854:INFO:Set up index.
2024-03-29 12:59:14,562:INFO:Initializing predict_model()
2024-03-29 12:59:14,562:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C82529A5B0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002C8257A5670>)
2024-03-29 12:59:14,562:INFO:Checking exceptions
2024-03-29 12:59:14,563:INFO:Preloading libraries
2024-03-29 12:59:14,563:INFO:Set up data.
2024-03-29 12:59:14,568:INFO:Set up index.
2024-03-29 12:59:14,655:INFO:Initializing predict_model()
2024-03-29 12:59:14,656:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C825767A00>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002C800707DC0>)
2024-03-29 12:59:14,656:INFO:Checking exceptions
2024-03-29 12:59:14,656:INFO:Preloading libraries
2024-03-29 12:59:14,657:INFO:Set up data.
2024-03-29 12:59:14,660:INFO:Set up index.
2024-03-29 12:59:14,825:INFO:Initializing predict_model()
2024-03-29 12:59:14,826:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C825476D30>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002C8257A5820>)
2024-03-29 12:59:14,826:INFO:Checking exceptions
2024-03-29 12:59:14,826:INFO:Preloading libraries
2024-03-29 12:59:14,826:INFO:Set up data.
2024-03-29 12:59:14,833:INFO:Set up index.
2024-03-29 12:59:14,917:INFO:Initializing predict_model()
2024-03-29 12:59:14,917:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C8257806D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002C800889280>)
2024-03-29 12:59:14,917:INFO:Checking exceptions
2024-03-29 12:59:14,917:INFO:Preloading libraries
2024-03-29 12:59:14,918:INFO:Set up data.
2024-03-29 12:59:14,921:INFO:Set up index.
2024-03-29 13:05:04,259:INFO:Initializing predict_model()
2024-03-29 13:05:04,259:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C825448190>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002C8257A5A60>)
2024-03-29 13:05:04,259:INFO:Checking exceptions
2024-03-29 13:05:04,260:INFO:Preloading libraries
2024-03-29 13:05:04,260:INFO:Set up data.
2024-03-29 13:05:04,268:INFO:Set up index.
2024-03-29 13:05:04,391:INFO:Initializing predict_model()
2024-03-29 13:05:04,391:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002C8005CEA30>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('normalize', TransformerWrapper(transformer=StandardScaler())),
                ('actual_estimator',
                 LogisticRegression(max_iter=1000, random_state=2024))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002C825427EE0>)
2024-03-29 13:05:04,391:INFO:Checking exceptions
2024-03-29 13:05:04,391:INFO:Preloading libraries
2024-03-29 13:05:04,391:INFO:Set up data.
2024-03-29 13:05:04,396:INFO:Set up index.
